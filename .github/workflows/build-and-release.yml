name: Build and Release Extension

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Determine version bump type
      id: bump_type
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "type=${{ github.event.inputs.version_bump }}" >> $GITHUB_OUTPUT
        else
          echo "type=patch" >> $GITHUB_OUTPUT
        fi

    - name: Get current version
      id: current_version
      run: |
        echo "version=$(node -p "require('./manifest.json').version")" >> $GITHUB_OUTPUT

    - name: Bump version
      id: bump_version
      run: |
        current_version="${{ steps.current_version.outputs.version }}"
        bump_type="${{ steps.bump_type.outputs.type }}"
        
        # Split version into components
        IFS='.' read -r major minor patch <<< "$current_version"
        
        # Increment based on bump type
        case $bump_type in
          major)
            major=$((major + 1))
            minor=0
            patch=0
            ;;
          minor)
            minor=$((minor + 1))
            patch=0
            ;;
          patch)
            patch=$((patch + 1))
            ;;
        esac
        
        # Create new version
        new_version="$major.$minor.$patch"
        
        echo "new_version=$new_version" >> $GITHUB_OUTPUT
        echo "Bumping version from $current_version to $new_version ($bump_type)"

    - name: Update versions
      run: |
        # Update manifest.json
        node -e "
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf8'));
          manifest.version = '${{ steps.bump_version.outputs.new_version }}';
          fs.writeFileSync('manifest.json', JSON.stringify(manifest, null, 2) + '\\n');
        "
        
        # Update package.json
        npm version ${{ steps.bump_version.outputs.new_version }} --no-git-tag-version

    - name: Build extension
      run: npm run build

    - name: Create extension package
      run: |
        # Create zip file with all necessary files
        zip -r "i-dont-like-that-v${{ steps.bump_version.outputs.new_version }}.zip" \
          dist/ \
          manifest.json \
          icon*.png

    - name: Generate changelog
      id: changelog
      run: |
        # Get commits since last tag
        last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -z "$last_tag" ]; then
          commits=$(git log --pretty=format:"- %s" --no-merges)
        else
          commits=$(git log ${last_tag}..HEAD --pretty=format:"- %s" --no-merges)
        fi
        
        # Save to file to handle multiline output
        echo "## What's Changed" > changelog.md
        echo "" >> changelog.md
        echo "$commits" >> changelog.md
        echo "" >> changelog.md
        echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/${last_tag}...v${{ steps.bump_version.outputs.new_version }}" >> changelog.md

    - name: Commit version bump
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add manifest.json package.json package-lock.json
        git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }} [skip ci]"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        tags: true

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "i-dont-like-that-v${{ steps.bump_version.outputs.new_version }}.zip"
        bodyFile: "changelog.md"
        tag: "v${{ steps.bump_version.outputs.new_version }}"
        name: "Release v${{ steps.bump_version.outputs.new_version }}"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-package-v${{ steps.bump_version.outputs.new_version }}
        path: i-dont-like-that-v${{ steps.bump_version.outputs.new_version }}.zip
        retention-days: 30